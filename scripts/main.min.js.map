{"version":3,"sources":["main.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","$","isPhone","browser","versions","mobile","ios","android","iPhone","iPad","u","userAgent","appVersion","trident","indexOf","presto","webKit","gecko","webApp","weixin","qq","language","browserLanguage","toLowerCase","handler","hash","target","document","getElementById","slice","removeClass","addClass","targetOffset","offset","top","innerWidth","animate","scrollTop","sidenav","click","this","attr","edge","jQuery"],"mappings":";;;;;;;;;;;;;;;;;;CAmBA,WACA,YAMA,IAAAA,GAAAC,QAAA,cAAAC,OAAAC,SAAAC,UAEA,UAAAF,OAAAC,SAAAC,UAEAF,OAAAC,SAAAC,SAAAC,MACA,0DAIA,kBAAAC,aACA,WAAAJ,OAAAC,SAAAI,UAAAP,IACAM,UAAAE,cAAAC,SAAA,qBACAC,KAAA,SAAAC,GAEAA,EAAAC,cAAA,WAKA,GAAAN,UAAAE,cAAAK,WAAA,CAGA,GAAAC,GAAAH,EAAAI,UAEAD,GAAAE,cAAA,WACA,OAAAF,EAAAG,OACA,IAAA,YAKA,KAEA,KAAA,YACA,KAAA,IAAAC,OAAA,yDAvBAZ,SAgCA,SAAAa,GACAC,QAAAC,MAAA,4CAAAF,QAMA,SAAAG,GACAA,EAAA,WAsBA,QAAAC,KACA,MAAAC,GAAAC,SAAAC,QAAAF,EAAAC,SAAAE,KAAAH,EAAAC,SAAAG,SAAAJ,EAAAC,SAAAI,QAAAL,EAAAC,SAAAK,KArBA,GAAAN,IACAC,SAAA,WACA,GAAAM,GAAAzB,UAAA0B,SAAA1B,WAAA2B,UACA,QACAC,QAAAH,EAAAI,QAAA,cACAC,OAAAL,EAAAI,QAAA,aACAE,OAAAN,EAAAI,QAAA,kBACAG,MAAAP,EAAAI,QAAA,aAAAJ,EAAAI,QAAA,aACAT,SAAAK,EAAA1B,MAAA,yBACAsB,MAAAI,EAAA1B,MAAA,iCACAuB,QAAAG,EAAAI,QAAA,eAAAJ,EAAAI,QAAA,YACAN,OAAAE,EAAAI,QAAA,aACAL,KAAAC,EAAAI,QAAA,WACAI,OAAAR,EAAAI,QAAA,cACAK,OAAAT,EAAAI,QAAA,qBACAM,GAAA,OAAAV,EAAA1B,MAAA,aAGAqC,UAAApC,UAAAqC,iBAAArC,UAAAoC,UAAAE,eAMAC,EAAA,SAAAC,GACA,GAAAC,GAAAC,SAAAC,eAAAH,EAAAI,MAAA,GACA,IAAAH,EAAA,CACAzB,EAAA,cAAA6B,YAAA,UACA7B,EAAA,wBAAAwB,EAAA,KAAAM,SAAA,SACA,IAAAC,GAAA/B,EAAAyB,GAAAO,SAAAC,IAAArD,OAAAsD,WAAA,IAAA,GACAlC,GAAA,aAAAmC,SAAAC,UAAAL,GAAA,KACA9B,KACAD,EAAA,YAAAqC,QAAA,UAIArC,GAAA,iCAAAsC,MAAA,WACAf,EAAAvB,EAAAuC,MAAAC,KAAA,gBAGAvC,MAEAD,EAAA,YAAAqC,SACAI,KAAA,UAEAzC,EAAA,aAAAsC,MAAA,WACAtC,EAAA,YAAAqC,QAAA,UAEArC,EAAA,iBAAAsC,MAAA,WACAtC,EAAA,YAAAqC,QAAA,eAKAK","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function () {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n\n  if ('serviceWorker' in navigator &&\n    (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n      .then(function (registration) {\n        // updatefound is fired if service-worker.js changes.\n        registration.onupdatefound = function () {\n          // updatefound is also fired the very first time the SW is installed,\n          // and there's no need to prompt for a reload at that point.\n          // So check here to see if the page is already controlled,\n          // i.e. whether there's an existing service worker.\n          if (navigator.serviceWorker.controller) {\n            // The updatefound event implies that registration.installing is set:\n            // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n            var installingWorker = registration.installing;\n\n            installingWorker.onstatechange = function () {\n              switch (installingWorker.state) {\n                case 'installed':\n                  // At this point, the old content will have been purged and the\n                  // fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in the page's interface.\n                  break;\n\n                case 'redundant':\n                  throw new Error('The installing ' +\n                    'service worker became redundant.');\n\n                default:\n                // Ignore\n              }\n            };\n          }\n        };\n      }).catch(function (e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n(function ($) {\n  $(function () {\n\n    var browser={\n      versions:function(){\n        var u = navigator.userAgent, app = navigator.appVersion;\n        return {//移动终端浏览器版本信息\n          trident: u.indexOf('Trident') > -1, //IE内核\n          presto: u.indexOf('Presto') > -1, //opera内核\n          webKit: u.indexOf('AppleWebKit') > -1, //苹果、谷歌内核\n          gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, //火狐内核\n          mobile: !!u.match(/AppleWebKit.*Mobile.*/), //是否为移动终端\n          ios: !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端\n          android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, //android终端或者uc浏览器\n          iPhone: u.indexOf('iPhone') > -1 , //是否为iPhone或者QQHD浏览器\n          iPad: u.indexOf('iPad') > -1, //是否iPad\n          webApp: u.indexOf('Safari') == -1, //是否web应该程序，没有头部与底部\n          weixin: u.indexOf('MicroMessenger') > -1, //是否微信\n          qq: u.match(/\\sQQ/i) == \" qq\" //是否QQ\n        };\n      }(),\n      language:(navigator.browserLanguage || navigator.language).toLowerCase()\n    }\n    function isPhone() {\n      return browser.versions.mobile || browser.versions.ios || browser.versions.android || browser.versions.iPhone || browser.versions.iPad\n    }\n    // const isPhone = () => true\n    var handler = function (hash) {\n      var target = document.getElementById(hash.slice(1));\n      if (!target) return;\n      $('.headNav a').removeClass('active');\n      $('.headNav a[data-href='+hash+']').addClass('active');\n      var targetOffset = $(target).offset().top - window.innerWidth/100*4.5;\n      $('html,body').animate({scrollTop: targetOffset}, 400);\n      if (isPhone()) {\n        $('.sidenav').sidenav('close')\n      }\n    }\n\n    $('a[data-href^=#][data-href!=#]').click(function () {\n      handler($(this).attr('data-href'))\n    });\n\n    if(isPhone()){\n      // 手机环境\n      $('.sidenav').sidenav({\n        edge: 'right'\n      });\n      $('#slideOut').click(function() {\n        $('.sidenav').sidenav('open')\n      })\n      $('#closesidenav').click(function() {\n        $('.sidenav').sidenav('close')\n      })\n    }\n\n  });\n})(jQuery);\n"]}